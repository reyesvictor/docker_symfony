version: '3.9'
services:
  mysql:
    image: 'mysql:8.0.22'
    container_name: mysql
    # restart: always
    command: '--default-authentication-plugin=mysql_native_password'
    environment:
      MYSQL_ROOT_PASSWORD: epitech
      MYSQL_DATABASE: kiloupabocou
      MYSQL_USER: reyesvictor
      MYSQL_PASSWORD: epitech
    ports:
      - '3306:3306'
    networks:
      - mysql
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - 'SYMFONY_PATH=${SYMFONY_PATH}'
    container_name: php
    # restart: always
    volumes:
      - './symfony:${SYMFONY_PATH}:cached'
      - './logs/symfony:${SYMFONY_PATH}/var/log:cached'
    user: '1000:1000'
    ports:
      - '9000:9000'
      - '9001:9001'
    depends_on:
      - mysql
    networks:
      - mysql
      - site
#   nginx:
#     image: 'nginx:1.19.0-alpine'
#     container_name: nginx
#     restart: always
#     volumes:
#       - './symfony/public/:${SYMFONY_PATH}:cached'
#       - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
#       - './logs/nginx:/var/log/nginx:cached'
#     ports:
#       - '80:80'
#     depends_on:
#       - php
#     networks:
#       - site
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: '3306'
    ports:
      - '8080:80'
    depends_on:
      - mysql
    networks:
      - mysql
#   elasticsearch:
#     container_name: elasticsearch
#     image: 'docker.elastic.co/elasticsearch/elasticsearch:7.10.1'
#     environment:
#       discovery.type: single-node
#     ports:
#       - '9200:9200'
#     networks:
#       elk:
#         aliases:
#           - elasticsearch
#   logstash:
#     container_name: logstash
#     image: 'docker.elastic.co/logstash/logstash:7.10.1'
#     depends_on:
#       - elasticsearch
#     volumes:
#       - >-
#         ./elk/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:cached
#       - './elk/logstash/conf.d:/etc/logstash/conf.d:cached'
#       - './logs/symfony:${SYMFONY_PATH}/var/log:cached'
#       - './logs/nginx:/var/log/nginx:cached'
#     networks:
#       - elk
#     expose: 
#       - '5044'
#   kibana:
#     container_name: kibana
#     depends_on:
#       - elasticsearch
#     image: 'docker.elastic.co/kibana/kibana:7.10.1'
#     environment:
#       SERVER_NAME: localhost
#       ELASTICSEARCH_HOSTS: 'http://elasticsearch:9200'
#       ES_JAVA_OPTS: "-Xmx256m -Xms256m"
#       ELASTIC_PASSWORD: epitech
#     networks:
#       - elk
#     ports:
#       - '5601:5601'
#   filebeat:
#     build: ./filebeat
#     container_name: filebeat
#     entrypoint: "filebeat -e -strict.perms=false"
#     volumes:
#       - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
#       - ./logs/nginx:/var/log/nginx
#     networks:
#       - elk
#     depends_on:
#       - php
#       - nginx
#       - logstash
#       - elasticsearch
#       - kibana
  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: epitech
    networks:
      - elk

  logstash:
    container_name: logstash
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    expose: 
      - "5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - ./nginx/config:/etc/nginx/conf.d
      - ./nginx/log:/var/log/nginx
      - './symfony/public/:${SYMFONY_PATH}:cached'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    #   - './logs/nginx:/var/log/nginx:cached'
    ports:
      - "80:80"
      - "443:443"
    links:
      - php:php
    depends_on: 
      - php
    networks:
      - elk
      - site

  filebeat:
    container_name: filebeat
    build: ./filebeat
    entrypoint: "filebeat -e -strict.perms=false"
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./nginx/log:/var/log/nginx
    networks:
      - elk
    depends_on: 
      - php
      - nginx
      - logstash
      - elasticsearch
      - kibana
    links: 
      - logstash

networks:
  mysql: null
  site: null
  elk:
    driver: bridge

volumes:
  elasticsearch:

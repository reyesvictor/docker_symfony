version: '3.9'
services:
  mysql:
    image: 'mysql:8.0.22'
    container_name: mysql
    restart: always
    command: '--default-authentication-plugin=mysql_native_password'
    environment:
      MYSQL_ROOT_PASSWORD: epitech
      MYSQL_DATABASE: kiloupabocou
      MYSQL_USER: reyesvictor
      MYSQL_PASSWORD: epitech
    ports:
      - '3306:3306'
    networks:
      - mysql
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - 'SYMFONY_PATH=${SYMFONY_PATH}'
    container_name: php
    restart: always
    volumes:
      - './symfony:${SYMFONY_PATH}:cached'
      - './logs/symfony:${SYMFONY_PATH}/var/log:cached'
    user: '1000:1000'
    ports:
      - '9000:9001'
    depends_on:
      - mysql
    networks:
      - mysql
      - site
  nginx:
    image: 'nginx:1.19.0-alpine'
    container_name: nginx
    restart: always
    volumes:
      - './symfony/public/:${SYMFONY_PATH}:cached'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
      - './logs/nginx:/var/log/nginx:cached'
    ports:
      - '80:80'
    depends_on:
      - php
    networks:
      - site
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: '3306'
    ports:
      - '8080:80'
    depends_on:
      - mysql
    networks:
      - mysql
  elasticsearch:
    container_name: elasticsearch
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.10.1'
    environment:
      discovery.type: single-node
    ports:
      - '9200:9200'
    networks:
      elk_stack:
        aliases:
          - elasticsearch
  logstash:
    container_name: logstash
    image: 'docker.elastic.co/logstash/logstash:7.10.1'
    depends_on:
      - elasticsearch
    volumes:
      - >-
        ./elk/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:cached
      - './elk/logstash/conf.d:/etc/logstash/conf.d:cached'
      - './logs/symfony:${SYMFONY_PATH}/var/log:cached'
      - './logs/nginx:/var/log/nginx:cached'
    networks:
      - elk_stack
  kibana:
    container_name: kibana
    depends_on:
      - elasticsearch
    image: 'docker.elastic.co/kibana/kibana:7.10.1'
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_HOSTS: 'http://elasticsearch:9200'
    networks:
      - elk_stack
    ports:
      - '81:5601'
networks:
  mysql: null
  site: null
  elk_stack: null
